// Code generated by protoc-gen-go. DO NOT EDIT.
// source: questionstream.proto

/*
Package questionstream is a generated protocol buffer package.

It is generated from these files:
	questionstream.proto

It has these top-level messages:
	QuestionRequest
	QuestionResponse
*/
package stream

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QuestionRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *QuestionRequest) Reset()                    { *m = QuestionRequest{} }
func (m *QuestionRequest) String() string            { return proto.CompactTextString(m) }
func (*QuestionRequest) ProtoMessage()               {}
func (*QuestionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *QuestionRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type QuestionResponse struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *QuestionResponse) Reset()                    { *m = QuestionResponse{} }
func (m *QuestionResponse) String() string            { return proto.CompactTextString(m) }
func (*QuestionResponse) ProtoMessage()               {}
func (*QuestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *QuestionResponse) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func init() {
	proto.RegisterType((*QuestionRequest)(nil), "QuestionRequest")
	proto.RegisterType((*QuestionResponse)(nil), "QuestionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for QuestionService service

type QuestionServiceClient interface {
	UnaryRequest(ctx context.Context, opts ...grpc.CallOption) (QuestionService_UnaryRequestClient, error)
}

type questionServiceClient struct {
	cc *grpc.ClientConn
}

func NewQuestionServiceClient(cc *grpc.ClientConn) QuestionServiceClient {
	return &questionServiceClient{cc}
}

func (c *questionServiceClient) UnaryRequest(ctx context.Context, opts ...grpc.CallOption) (QuestionService_UnaryRequestClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_QuestionService_serviceDesc.Streams[0], c.cc, "/QuestionService/UnaryRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &questionServiceUnaryRequestClient{stream}
	return x, nil
}

type QuestionService_UnaryRequestClient interface {
	Send(*QuestionRequest) error
	Recv() (*QuestionResponse, error)
	grpc.ClientStream
}

type questionServiceUnaryRequestClient struct {
	grpc.ClientStream
}

func (x *questionServiceUnaryRequestClient) Send(m *QuestionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *questionServiceUnaryRequestClient) Recv() (*QuestionResponse, error) {
	m := new(QuestionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for QuestionService service

type QuestionServiceServer interface {
	UnaryRequest(QuestionService_UnaryRequestServer) error
}

func RegisterQuestionServiceServer(s *grpc.Server, srv QuestionServiceServer) {
	s.RegisterService(&_QuestionService_serviceDesc, srv)
}

func _QuestionService_UnaryRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QuestionServiceServer).UnaryRequest(&questionServiceUnaryRequestServer{stream})
}

type QuestionService_UnaryRequestServer interface {
	Send(*QuestionResponse) error
	Recv() (*QuestionRequest, error)
	grpc.ServerStream
}

type questionServiceUnaryRequestServer struct {
	grpc.ServerStream
}

func (x *questionServiceUnaryRequestServer) Send(m *QuestionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *questionServiceUnaryRequestServer) Recv() (*QuestionRequest, error) {
	m := new(QuestionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _QuestionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QuestionService",
	HandlerType: (*QuestionServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UnaryRequest",
			Handler:       _QuestionService_UnaryRequest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "questionstream.proto",
}

func init() { proto.RegisterFile("questionstream.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2c, 0x4d, 0x2d,
	0x2e, 0xc9, 0xcc, 0xcf, 0x2b, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x57, 0x52, 0xe7, 0xe2, 0x0f, 0x84, 0x8a, 0x07, 0xa5, 0x82, 0x55, 0x08, 0x89, 0x70, 0xb1, 0x16,
	0x96, 0xa6, 0x16, 0x55, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x4a, 0x1a, 0x5c,
	0x02, 0x08, 0x85, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0xd8, 0x55, 0x1a, 0xf9, 0x20, 0x8c, 0x0c,
	0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe4, 0xe2, 0x09, 0xcd, 0x4b, 0x2c, 0xaa, 0x84,
	0x59, 0x21, 0xa0, 0x87, 0x66, 0xa9, 0x94, 0xa0, 0x1e, 0xba, 0xe9, 0x4a, 0x0c, 0x1a, 0x8c, 0x06,
	0x8c, 0x49, 0x6c, 0x60, 0x77, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x21, 0x06, 0x39,
	0xbf, 0x00, 0x00, 0x00,
}
